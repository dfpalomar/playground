name: Tests with main

on:
  workflow_dispatch:
    inputs:
      deploy_to_google_play:
        type: choice
        required: true
        description: Deploy to Google Play (Closed testing)?
        default: "YES"
        options:
          - "YES"
          - "NO"
      release_notes:
        type: string
        required: true
        description: Release Notes

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set ENV variables for conditional statements
        run: |
          echo "BRANCH_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "DEPLOY_TO_GOOGLE_PLAY=${{ github.event.inputs.deploy_to_google_play }}" >> $GITHUB_ENV

      - name: Abort if branch is not a release
        if: contains(env.BRANCH_NAME, 'release/') == false
        run: |
          echo '${{ env.BRANCH_NAME }} is not a release branch! Release branch name must start with release/ '
          exit 1

      - name: Use inputs
        run: echo "Release notes - ${{ github.event.inputs.release_notes }}, Deploy to Google Play - ${{ github.event.inputs.deploy_to_google_play }}"

      - name: Build the project
        run: |
          echo "Build the project"

#      - name: Clean project
#        run: ./gradlew clean
#
#      - name: Assemble
#        run: ./gradlew assembleDebug

      - name: Read release version code from gradle.properties
        id: read_version_code
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'version_code'

      - name: Read release version name from gradle.properties
        id: read_version_name
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'version_name'

      - name: Print version code and name
        run: |
          echo "Version code is ${{ steps.read_version_code.outputs.value }}"
          echo "Version name is ${{ steps.read_version_name.outputs.value }}"


      - name: Deploy to Google Play Closed Testing track
        if: contains(env.DEPLOY_TO_GOOGLE_PLAY, 'YES')
        run: |
          echo 'Deploy to Google Play'

      # This is required for tagging
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "{--}"

      - name: Tag Release
        run: |
          tag_name=${{ steps.read_version_name.outputs.value }}
          echo "Bot tagging release with tag $tag_name"
          git tag -a $tag_name -m "Release $tag_name"
          git push origin --tags