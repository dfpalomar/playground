name: Tests with main

on:
  workflow_dispatch:
    inputs:
      deploy_to_google_play:
        type: choice
        required: true
        description: Deploy To Google Play (Closed testing)?
        default: "NO"
        options:
          - "YES"
          - "NO"
      message:
        type: string
        required: true
        description: Release Notes
      use-emoji:
        type: boolean
        required: false
        description: Include  emojis

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Use inputs
        run: echo "Message - ${{ github.event.inputs.message }}, Deploy to Google Play - ${{ github.event.inputs.deploy_to_google_play }}, Use emoji - ${{ github.event.inputs.use-emoji }}"


      - name: Read version name
        id: read_version_name
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'version_name'
      - name: Read version code
        id: read_version_code
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'version_code'


      - name: Extract branch name
        run: |
          branch_name=${GITHUB_REF_NAME}
          echo "The branch name is $branch_name"

#      - name: Check if release branch
#        if: contains("${GITHUB_REF_NAME}", "release/") == false
#        run: |
#          echo "Not a release branch"
#          exit 1

#        if: ${{ github.event.inputs.deploy_to_google_play }} == 'YES'
      - name: Run only if required
        if: ${{ 'Diego' == 'Daniel' }}
        run: |
          echo "Fucking bitch deploy to Google Play: ${{ github.event.inputs.deploy_to_google_play }}"


      # This is required for tagging
#      - name: Setup git config
#        run: |
#          git config user.name "GitHub Actions Bot"
#          git config user.email "{--}"
#
#      - name: Tag Release
#        run: |
#          tag_name=${{ steps.read_version_name.outputs.value }}
#          echo "Bot tagging release with tag $tag_name"
#          git tag -a $tag_name -m "Release $tag_name"
#          git push origin --tags






#      - name: Clean project
#        run: ./gradlew clean
#
#      - name: Assemble
#        run: ./gradlew assembleDebug